<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title><%= title %></title>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
  <link href="/css/style.css" rel="stylesheet">
</head>
<body>
  <nav class="navbar navbar-expand-lg navbar-dark bg-primary">
    <div class="container">
      <a class="navbar-brand" href="/">OOO Calendar Sync</a>
      <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav">
        <span class="navbar-toggler-icon"></span>
      </button>
      <div class="collapse navbar-collapse" id="navbarNav">
        <ul class="navbar-nav ms-auto">
          <li class="nav-item">
            <a class="nav-link" href="/dashboard">Dashboard</a>
          </li>
          <li class="nav-item">
            <a class="nav-link active" href="/setup">Setup</a>
          </li>
          <li class="nav-item">
            <a class="nav-link" href="/auth/logout">Logout</a>
          </li>
        </ul>
      </div>
    </div>
  </nav>

  <div class="container mt-5">
    <div class="row">
      <div class="col-md-12">
        <h1>Set Up OOO Calendar Sync</h1>
        <p class="lead">Configure which team calendars should receive your OOO events</p>
      </div>
    </div>

    <div class="row mt-4">
      <div class="col-lg-8">
        <div class="card">
          <div class="card-header">
            <h5>Sync Configuration</h5>
          </div>
          <div class="card-body">
            <form id="sync-form">
              <div class="mb-3">
                <label for="displayName" class="form-label">Your Display Name</label>
                <input type="text" class="form-control" id="displayName" required 
                       placeholder="How your name should appear in team calendars">
                <div class="form-text">This will be used to identify your OOO events in team calendars.</div>
              </div>
              
              <div class="mb-3">
                <label class="form-label">Team Calendars</label>
                <div id="calendars-loading" class="text-center py-3">
                  <div class="spinner-border text-primary" role="status">
                    <span class="visually-hidden">Loading...</span>
                  </div>
                  <p class="mt-2">Loading your calendars...</p>
                </div>
                <div id="calendars-container" class="d-none">
                  <!-- Calendars will be loaded here -->
                </div>
              </div>
              
              <div class="mb-3 form-check">
                <input type="checkbox" class="form-check-input" id="enableAutoSync" checked>
                <label class="form-check-label" for="enableAutoSync">Enable automatic sync (every 6 hours)</label>
              </div>
              
              <div class="d-grid gap-2">
                <button type="submit" class="btn btn-primary" id="save-btn">Save Configuration</button>
                <a href="/dashboard" class="btn btn-outline-secondary">Cancel</a>
              </div>
            </form>
          </div>
        </div>
      </div>
      
      <div class="col-lg-4">
        <div class="card">
          <div class="card-header">
            <h5>Help & Information</h5>
          </div>
          <div class="card-body">
            <h6>What is a Team Calendar?</h6>
            <p>Team calendars are shared calendars that your team uses to track availability. Select calendars where you want your OOO events to appear.</p>
            
            <h6>What events will be synced?</h6>
            <p>Events with "OOO", "Out of Office", "Vacation", "Leave", or similar keywords in the title or description.</p>
            
            <h6>How do I create a team calendar?</h6>
            <p>In Google Calendar, click the "+" next to "Other calendars" and select "Create new calendar". Then share it with your team.</p>
          </div>
        </div>
      </div>
    </div>
  </div>

  <footer class="footer mt-auto py-3 bg-light">
    <div class="container text-center">
      <span class="text-muted">OOO Calendar Sync Â© 2025</span>
    </div>
  </footer>

  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
  <script>
    document.addEventListener('DOMContentLoaded', function() {
      const syncForm = document.getElementById('sync-form');
      const saveBtn = document.getElementById('save-btn');
      const displayNameInput = document.getElementById('displayName');
      const enableAutoSyncCheckbox = document.getElementById('enableAutoSync');
      const calendarsContainer = document.getElementById('calendars-container');
      const calendarsLoading = document.getElementById('calendars-loading');
      
      // Fetch user's calendars
      fetch('/calendar/calendars')
        .then(response => response.json())
        .then(calendars => {
          calendarsLoading.classList.add('d-none');
          calendarsContainer.classList.remove('d-none');
          
          // Create checkboxes for each calendar
          calendars.forEach(calendar => {
            const calendarDiv = document.createElement('div');
            calendarDiv.className = 'form-check mb-2';
            
            const checkbox = document.createElement('input');
            checkbox.type = 'checkbox';
            checkbox.className = 'form-check-input calendar-checkbox';
            checkbox.id = `calendar-${calendar.id}`;
            checkbox.value = calendar.id;
            checkbox.dataset.calendarName = calendar.summary;
            
            const label = document.createElement('label');
            label.className = 'form-check-label';
            label.htmlFor = `calendar-${calendar.id}`;
            label.textContent = calendar.summary;
            
            // Add calendar access role info
            if (calendar.accessRole === 'reader') {
              const badge = document.createElement('span');
              badge.className = 'badge bg-warning text-dark ms-2';
              badge.textContent = 'Read Only';
              label.appendChild(badge);
              checkbox.disabled = true;
            }
            
            calendarDiv.appendChild(checkbox);
            calendarDiv.appendChild(label);
            calendarsContainer.appendChild(calendarDiv);
          });
          
          // If there are no writable calendars, show a message
          const writableCalendars = calendars.filter(cal => cal.accessRole !== 'reader');
          if (writableCalendars.length === 0) {
            const alertDiv = document.createElement('div');
            alertDiv.className = 'alert alert-warning';
            alertDiv.textContent = 'You don\'t have write access to any calendars. Please create a team calendar or ask for write permissions.';
            calendarsContainer.appendChild(alertDiv);
          }
          
          // Fetch existing sync config
          return fetch('/calendar/sync-config');
        })
        .then(response => response.json())
        .then(config => {
          if (config) {
            // Pre-fill the form with existing config
            displayNameInput.value = config.userDisplayName || '';
            
            // Check the team calendar checkboxes
            const calendarCheckboxes = document.querySelectorAll('.calendar-checkbox');
            calendarCheckboxes.forEach(checkbox => {
              if (config.teamCalendarIds.includes(checkbox.value)) {
                checkbox.checked = true;
              }
            });
          }
        })
        .catch(error => {
          console.error('Error loading calendars:', error);
          calendarsLoading.innerHTML = '<div class="alert alert-danger">Error loading calendars. Please try again.</div>';
        });
      
      // Handle form submission
      syncForm.addEventListener('submit', function(event) {
        event.preventDefault();
        
        // Disable the save button
        saveBtn.disabled = true;
        saveBtn.innerHTML = '<span class="spinner-border spinner-border-sm" role="status" aria-hidden="true"></span> Saving...';
        
        // Get selected team calendars
        const selectedCalendars = [];
        const calendarCheckboxes = document.querySelectorAll('.calendar-checkbox:checked');
        calendarCheckboxes.forEach(checkbox => {
          selectedCalendars.push(checkbox.value);
        });
        
        if (selectedCalendars.length === 0) {
          alert('Please select at least one team calendar');
          saveBtn.disabled = false;
          saveBtn.textContent = 'Save Configuration';
          return;
        }
        
        // Save sync configuration
        fetch('/calendar/sync', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json'
          },
          body: JSON.stringify({
            teamCalendarIds: selectedCalendars,
            userDisplayName: displayNameInput.value.trim()
          })
        })
        .then(response => {
          if (!response.ok) {
            throw new Error('Failed to save configuration');
          }
          return response.json();
        })
        .then(result => {
          // Save auto-sync preference
          return fetch('/save-sync-config', {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json'
            },
            body: JSON.stringify({
              teamCalendarIds: selectedCalendars,
              userDisplayName: displayNameInput.value.trim(),
              enableAutoSync: enableAutoSyncCheckbox.checked
            })
          });
        })
        .then(response => {
          // Redirect to dashboard
          window.location.href = '/dashboard';
        })
        .catch(error => {
          console.error('Error saving configuration:', error);
          alert('Error saving configuration. Please try again.');
          saveBtn.disabled = false;
          saveBtn.textContent = 'Save Configuration';
        });
      });
    });
  </script>
</body>
</html>