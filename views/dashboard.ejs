<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title><%= title %></title>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
  <link href="/css/style.css" rel="stylesheet">
</head>
<body>
  <nav class="navbar navbar-expand-lg navbar-dark bg-primary">
    <div class="container">
      <a class="navbar-brand" href="/">OOO Calendar Sync</a>
      <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav">
        <span class="navbar-toggler-icon"></span>
      </button>
      <div class="collapse navbar-collapse" id="navbarNav">
        <ul class="navbar-nav ms-auto">
          <li class="nav-item">
            <a class="nav-link active" href="/dashboard">Dashboard</a>
          </li>
          <li class="nav-item">
            <a class="nav-link" href="/setup">Setup</a>
          </li>
          <li class="nav-item">
            <a class="nav-link" href="/auth/logout">Logout</a>
          </li>
        </ul>
      </div>
    </div>
  </nav>

  <div class="container mt-5">
    <div class="row">
      <div class="col-md-12">
        <h1>Dashboard</h1>
        <p class="lead">Manage your OOO calendar sync settings</p>
      </div>
    </div>

    <div class="row mt-4">
      <div class="col-lg-8">
        <div class="card">
          <div class="card-header">
            <h5>Your OOO Sync Status</h5>
          </div>
          <div class="card-body">
            <% if (syncConfig) { %>
              <div class="alert alert-success">
                <h4>Sync Active</h4>
                <p>Your OOO events are being synced to <%= syncConfig.teamCalendarIds.length %> team calendar(s).</p>
                <p><small>Last synced: <%= new Date(syncConfig.lastSync).toLocaleString() %></small></p>
              </div>
              
              <h6>Team Calendars:</h6>
              <ul id="team-calendars-list" class="list-group">
                <% syncConfig.teamCalendarIds.forEach(function(calendarId) { %>
                  <li class="list-group-item"><%= calendarId %></li>
                <% }); %>
              </ul>
              
              <div class="mt-3">
                <button id="refresh-btn" class="btn btn-primary">Sync Now</button>
                <a href="/setup" class="btn btn-outline-primary">Modify Settings</a>
              </div>
            <% } else { %>
              <div class="alert alert-warning">
                <h4>Sync Not Configured</h4>
                <p>You haven't set up OOO syncing yet.</p>
              </div>
              
              <a href="/setup" class="btn btn-primary">Set Up Sync</a>
            <% } %>
          </div>
        </div>
      </div>
      
      <div class="col-lg-4">
        <div class="card">
          <div class="card-header">
            <h5>Upcoming OOO Events</h5>
          </div>
          <div class="card-body">
            <div id="upcoming-events">
              <p class="text-center text-muted">Loading...</p>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>

  <footer class="footer mt-auto py-3 bg-light">
    <div class="container text-center">
      <span class="text-muted">OOO Calendar Sync Â© 2025</span>
    </div>
  </footer>

  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
  <script>
    document.addEventListener('DOMContentLoaded', function() {
      // Fetch upcoming OOO events
      fetch('/calendar/ooo-events')
        .then(response => response.json())
        .then(events => {
          const eventsContainer = document.getElementById('upcoming-events');
          if (events.length === 0) {
            eventsContainer.innerHTML = '<p class="text-center">No upcoming OOO events found</p>';
          } else {
            let html = '<ul class="list-group">';
            events.slice(0, 5).forEach(event => {
              const start = new Date(event.start.dateTime || event.start.date).toLocaleDateString();
              const end = new Date(event.end.dateTime || event.end.date).toLocaleDateString();
              html += `<li class="list-group-item">
                      <strong>${event.summary}</strong>
                      <br>
                      <small>${start} - ${end}</small>
                     </li>`;
            });
            html += '</ul>';
            eventsContainer.innerHTML = html;
          }
        })
        .catch(error => {
          console.error('Error fetching events:', error);
          document.getElementById('upcoming-events').innerHTML = 
            '<p class="text-center text-danger">Error loading events</p>';
        });
      
      // Set up sync now button
      const refreshBtn = document.getElementById('refresh-btn');
      if (refreshBtn) {
        refreshBtn.addEventListener('click', function() {
          refreshBtn.disabled = true;
          refreshBtn.textContent = 'Syncing...';
          
          // Add status message for better feedback
          let statusDiv = document.getElementById('sync-status');
          if (!statusDiv) {
            statusDiv = document.createElement('div');
            statusDiv.id = 'sync-status';
            statusDiv.className = 'alert alert-info mt-2';
            refreshBtn.parentNode.appendChild(statusDiv);
          } else {
            statusDiv.className = 'alert alert-info mt-2';
          }
          statusDiv.textContent = 'Fetching sync configuration...';
          
          fetch('/calendar/sync-config')
            .then(response => {
              if (!response.ok) {
                throw new Error(`Failed to fetch sync config: ${response.status} ${response.statusText}`);
              }
              return response.json();
            })
            .then(config => {
              if (!config) {
                statusDiv.className = 'alert alert-warning mt-2';
                statusDiv.textContent = 'No sync configuration found. Redirecting to setup...';
                setTimeout(() => {
                  window.location.href = '/setup';
                }, 1500);
                return null;
              }
              
              statusDiv.textContent = 'Syncing OOO events to team calendars...';
              
              return fetch('/calendar/sync', {
                method: 'POST',
                headers: {
                  'Content-Type': 'application/json'
                },
                body: JSON.stringify({
                  teamCalendarIds: config.teamCalendarIds,
                  userDisplayName: config.userDisplayName
                })
              });
            })
            .then(response => {
              if (!response) return null;
              
              if (!response.ok) {
                throw new Error(`Sync failed: ${response.status} ${response.statusText}`);
              }
              
              return response.json();
            })
            .then(result => {
              if (result) {
                // Update status message based on result
                if (result.success.length > 0) {
                  // Events were successfully synced
                  statusDiv.className = 'alert alert-success mt-2';
                  statusDiv.textContent = `Sync completed: ${result.success.length} events synced successfully.`;
                } else if (result.skipped && result.skipped.length > 0) {
                  // Events were found but already synced
                  statusDiv.className = 'alert alert-info mt-2';
                  statusDiv.textContent = `No new events to sync: ${result.skipped.length} events were already synced to team calendars.`;
                } else if (result.message && result.message.includes('No OOO events found')) {
                  // No OOO events found in calendar
                  statusDiv.className = 'alert alert-warning mt-2';
                  statusDiv.textContent = 'No OOO events found in your calendar. Try adding events with "Out of Office" or "OOO" in the title.';
                } else {
                  // Generic success message
                  statusDiv.className = 'alert alert-info mt-2';
                  statusDiv.textContent = result.message || 'Sync completed.';
                }
                
                // Create a details section if there's additional info
                if (result.info) {
                  const detailsDiv = document.createElement('div');
                  detailsDiv.className = 'mt-2 small';
                  detailsDiv.innerHTML = `
                    <strong>Time Range:</strong> ${result.info.timeRange.from} to ${result.info.timeRange.to}<br>
                    <strong>Team Calendars:</strong> ${result.info.teamCalendarCount}<br>
                    <strong>OOO Events Found:</strong> ${result.info.eventCount || 0}
                  `;
                  statusDiv.appendChild(detailsDiv);
                }
                
                // Automatically reload after a delay
                setTimeout(() => {
                  window.location.reload();
                }, 5000); // Give user more time to read the detailed message
              }
            })
            .catch(error => {
              console.error('Error during sync:', error);
              statusDiv.className = 'alert alert-danger mt-2';
              statusDiv.textContent = `Error: ${error.message || 'Unknown error during sync operation'}`;
            })
            .finally(() => {
              refreshBtn.disabled = false;
              refreshBtn.textContent = 'Sync Now';
            });
        });
      }
    });
  </script>
</body>
</html>